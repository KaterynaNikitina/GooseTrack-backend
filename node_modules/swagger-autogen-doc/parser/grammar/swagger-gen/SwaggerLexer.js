// Generated from /home/alex/Project/NodeJs/swagger-autogen-doc/swagger-autogen/src/parser/grammar/SwaggerLexer.g4 by ANTLR 4.9.1
// jshint ignore: start
const antlr4 = require('antlr4');



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\r\u00a4\b\u0001\b\u0001\b\u0001\u0004\u0002\t\u0002\u0004",
    "\u0003\t\u0003\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t",
    "\u0006\u0004\u0007\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004",
    "\u000b\t\u000b\u0004\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f",
    "\t\u000f\u0004\u0010\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012",
    "\u0004\u0013\t\u0013\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016",
    "\t\u0016\u0003\u0002\u0003\u0002\u0005\u00022\n\u0002\u0003\u0002\u0006",
    "\u00025\n\u0002\r\u0002\u000e\u00026\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0004\u0006\u0004>\n\u0004\r\u0004\u000e\u0004?\u0003",
    "\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003",
    "\u0006\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003",
    "\b\u0003\b\u0003\b\u0003\t\u0003\t\u0007\tS\n\t\f\t\u000e\tV\u000b\t",
    "\u0003\n\u0003\n\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0003",
    "\f\u0003\r\u0003\r\u0003\r\u0003\r\u0005\rd\n\r\u0003\u000e\u0005\u000e",
    "g\n\u000e\u0003\u000f\u0007\u000fj\n\u000f\f\u000f\u000e\u000fm\u000b",
    "\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u0010\u0003",
    "\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0005\u0010x\n\u0010\u0003",
    "\u0011\u0006\u0011{\n\u0011\r\u0011\u000e\u0011|\u0003\u0011\u0005\u0011",
    "\u0080\n\u0011\u0003\u0012\u0005\u0012\u0083\n\u0012\u0003\u0013\u0003",
    "\u0013\u0006\u0013\u0087\n\u0013\r\u0013\u000e\u0013\u0088\u0003\u0014",
    "\u0006\u0014\u008c\n\u0014\r\u0014\u000e\u0014\u008d\u0003\u0014\u0005",
    "\u0014\u0091\n\u0014\u0003\u0015\u0003\u0015\u0007\u0015\u0095\n\u0015",
    "\f\u0015\u000e\u0015\u0098\u000b\u0015\u0003\u0015\u0003\u0015\u0003",
    "\u0016\u0003\u0016\u0007\u0016\u009e\n\u0016\f\u0016\u000e\u0016\u00a1",
    "\u000b\u0016\u0003\u0016\u0003\u0016\u0002\u0002\u0017\u0005\u0003\u0007",
    "\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b",
    "\u0017\u0002\u0019\u0002\u001b\u0002\u001d\u0002\u001f\f!\r#\u0002%",
    "\u0002\'\u0002)\u0002+\u0002-\u0002\u0005\u0002\u0003\u0004\r\u0004",
    "\u0002\u000b\u000b\"\"\u0003\u0002>>\u0005\u0002\u000b\f\u000f\u000f",
    "\"\"\u0005\u00022;CHch\u0003\u00022;\u0004\u0002/0aa\u0005\u0002\u00b9",
    "\u00b9\u0302\u0371\u2041\u2042\n\u0002<<C\\c|\u2072\u2191\u2c02\u2ff1",
    "\u3003\ud801\uf902\ufdd1\ufdf2\uffff\t\u0002%%-=??AAC\\aac|\u0004\u0002",
    "$$>>\u0004\u0002))>>\u0002\u00ab\u0002\u0005\u0003\u0002\u0002\u0002",
    "\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002",
    "\u0003\u000b\u0003\u0002\u0002\u0002\u0003\r\u0003\u0002\u0002\u0002",
    "\u0003\u000f\u0003\u0002\u0002\u0002\u0003\u0011\u0003\u0002\u0002\u0002",
    "\u0003\u0013\u0003\u0002\u0002\u0002\u0003\u0015\u0003\u0002\u0002\u0002",
    "\u0004\u001f\u0003\u0002\u0002\u0002\u0004!\u0003\u0002\u0002\u0002",
    "\u00054\u0003\u0002\u0002\u0002\u00078\u0003\u0002\u0002\u0002\t=\u0003",
    "\u0002\u0002\u0002\u000bA\u0003\u0002\u0002\u0002\rE\u0003\u0002\u0002",
    "\u0002\u000fJ\u0003\u0002\u0002\u0002\u0011L\u0003\u0002\u0002\u0002",
    "\u0013P\u0003\u0002\u0002\u0002\u0015W\u0003\u0002\u0002\u0002\u0017",
    "[\u0003\u0002\u0002\u0002\u0019]\u0003\u0002\u0002\u0002\u001bc\u0003",
    "\u0002\u0002\u0002\u001df\u0003\u0002\u0002\u0002\u001fk\u0003\u0002",
    "\u0002\u0002!w\u0003\u0002\u0002\u0002#z\u0003\u0002\u0002\u0002%\u0082",
    "\u0003\u0002\u0002\u0002\'\u0084\u0003\u0002\u0002\u0002)\u008b\u0003",
    "\u0002\u0002\u0002+\u0092\u0003\u0002\u0002\u0002-\u009b\u0003\u0002",
    "\u0002\u0002/5\t\u0002\u0002\u000202\u0007\u000f\u0002\u000210\u0003",
    "\u0002\u0002\u000212\u0003\u0002\u0002\u000223\u0003\u0002\u0002\u0002",
    "35\u0007\f\u0002\u00024/\u0003\u0002\u0002\u000241\u0003\u0002\u0002",
    "\u000256\u0003\u0002\u0002\u000264\u0003\u0002\u0002\u000267\u0003\u0002",
    "\u0002\u00027\u0006\u0003\u0002\u0002\u000289\u0007>\u0002\u00029:\u0003",
    "\u0002\u0002\u0002:;\b\u0003\u0002\u0002;\b\u0003\u0002\u0002\u0002",
    "<>\n\u0003\u0002\u0002=<\u0003\u0002\u0002\u0002>?\u0003\u0002\u0002",
    "\u0002?=\u0003\u0002\u0002\u0002?@\u0003\u0002\u0002\u0002@\n\u0003",
    "\u0002\u0002\u0002AB\u0007@\u0002\u0002BC\u0003\u0002\u0002\u0002CD",
    "\b\u0005\u0003\u0002D\f\u0003\u0002\u0002\u0002EF\u00071\u0002\u0002",
    "FG\u0007@\u0002\u0002GH\u0003\u0002\u0002\u0002HI\b\u0006\u0003\u0002",
    "I\u000e\u0003\u0002\u0002\u0002JK\u00071\u0002\u0002K\u0010\u0003\u0002",
    "\u0002\u0002LM\u0007?\u0002\u0002MN\u0003\u0002\u0002\u0002NO\b\b\u0004",
    "\u0002O\u0012\u0003\u0002\u0002\u0002PT\u0005\u001d\u000e\u0002QS\u0005",
    "\u001b\r\u0002RQ\u0003\u0002\u0002\u0002SV\u0003\u0002\u0002\u0002T",
    "R\u0003\u0002\u0002\u0002TU\u0003\u0002\u0002\u0002U\u0014\u0003\u0002",
    "\u0002\u0002VT\u0003\u0002\u0002\u0002WX\t\u0004\u0002\u0002XY\u0003",
    "\u0002\u0002\u0002YZ\b\n\u0005\u0002Z\u0016\u0003\u0002\u0002\u0002",
    "[\\\t\u0005\u0002\u0002\\\u0018\u0003\u0002\u0002\u0002]^\t\u0006\u0002",
    "\u0002^\u001a\u0003\u0002\u0002\u0002_d\u0005\u001d\u000e\u0002`d\t",
    "\u0007\u0002\u0002ad\u0005\u0019\f\u0002bd\t\b\u0002\u0002c_\u0003\u0002",
    "\u0002\u0002c`\u0003\u0002\u0002\u0002ca\u0003\u0002\u0002\u0002cb\u0003",
    "\u0002\u0002\u0002d\u001c\u0003\u0002\u0002\u0002eg\t\t\u0002\u0002",
    "fe\u0003\u0002\u0002\u0002g\u001e\u0003\u0002\u0002\u0002hj\u0007\"",
    "\u0002\u0002ih\u0003\u0002\u0002\u0002jm\u0003\u0002\u0002\u0002ki\u0003",
    "\u0002\u0002\u0002kl\u0003\u0002\u0002\u0002ln\u0003\u0002\u0002\u0002",
    "mk\u0003\u0002\u0002\u0002no\u0005!\u0010\u0002op\u0003\u0002\u0002",
    "\u0002pq\b\u000f\u0003\u0002q \u0003\u0002\u0002\u0002rx\u0005+\u0015",
    "\u0002sx\u0005-\u0016\u0002tx\u0005#\u0011\u0002ux\u0005\'\u0013\u0002",
    "vx\u0005)\u0014\u0002wr\u0003\u0002\u0002\u0002ws\u0003\u0002\u0002",
    "\u0002wt\u0003\u0002\u0002\u0002wu\u0003\u0002\u0002\u0002wv\u0003\u0002",
    "\u0002\u0002x\"\u0003\u0002\u0002\u0002y{\u0005%\u0012\u0002zy\u0003",
    "\u0002\u0002\u0002{|\u0003\u0002\u0002\u0002|z\u0003\u0002\u0002\u0002",
    "|}\u0003\u0002\u0002\u0002}\u007f\u0003\u0002\u0002\u0002~\u0080\u0007",
    "\"\u0002\u0002\u007f~\u0003\u0002\u0002\u0002\u007f\u0080\u0003\u0002",
    "\u0002\u0002\u0080$\u0003\u0002\u0002\u0002\u0081\u0083\t\n\u0002\u0002",
    "\u0082\u0081\u0003\u0002\u0002\u0002\u0083&\u0003\u0002\u0002\u0002",
    "\u0084\u0086\u0007%\u0002\u0002\u0085\u0087\t\u0005\u0002\u0002\u0086",
    "\u0085\u0003\u0002\u0002\u0002\u0087\u0088\u0003\u0002\u0002\u0002\u0088",
    "\u0086\u0003\u0002\u0002\u0002\u0088\u0089\u0003\u0002\u0002\u0002\u0089",
    "(\u0003\u0002\u0002\u0002\u008a\u008c\t\u0006\u0002\u0002\u008b\u008a",
    "\u0003\u0002\u0002\u0002\u008c\u008d\u0003\u0002\u0002\u0002\u008d\u008b",
    "\u0003\u0002\u0002\u0002\u008d\u008e\u0003\u0002\u0002\u0002\u008e\u0090",
    "\u0003\u0002\u0002\u0002\u008f\u0091\u0007\'\u0002\u0002\u0090\u008f",
    "\u0003\u0002\u0002\u0002\u0090\u0091\u0003\u0002\u0002\u0002\u0091*",
    "\u0003\u0002\u0002\u0002\u0092\u0096\u0007$\u0002\u0002\u0093\u0095",
    "\n\u000b\u0002\u0002\u0094\u0093\u0003\u0002\u0002\u0002\u0095\u0098",
    "\u0003\u0002\u0002\u0002\u0096\u0094\u0003\u0002\u0002\u0002\u0096\u0097",
    "\u0003\u0002\u0002\u0002\u0097\u0099\u0003\u0002\u0002\u0002\u0098\u0096",
    "\u0003\u0002\u0002\u0002\u0099\u009a\u0007$\u0002\u0002\u009a,\u0003",
    "\u0002\u0002\u0002\u009b\u009f\u0007)\u0002\u0002\u009c\u009e\n\f\u0002",
    "\u0002\u009d\u009c\u0003\u0002\u0002\u0002\u009e\u00a1\u0003\u0002\u0002",
    "\u0002\u009f\u009d\u0003\u0002\u0002\u0002\u009f\u00a0\u0003\u0002\u0002",
    "\u0002\u00a0\u00a2\u0003\u0002\u0002\u0002\u00a1\u009f\u0003\u0002\u0002",
    "\u0002\u00a2\u00a3\u0007)\u0002\u0002\u00a3.\u0003\u0002\u0002\u0002",
    "\u0016\u0002\u0003\u0004146?Tcfkw|\u007f\u0082\u0088\u008d\u0090\u0096",
    "\u009f\u0006\u0007\u0003\u0002\u0006\u0002\u0002\u0007\u0004\u0002\u0002",
    "\u0003\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

class SwaggerLexer extends antlr4.Lexer {

    static grammarFileName = "SwaggerLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE", "TAG", "ATTVALUE" ];
	static literalNames = [ null, null, "'<'", null, "'>'", "'/>'", "'/'", 
                         "'='" ];
	static symbolicNames = [ null, "SEA_WS", "TAG_OPEN", "SWAGGER_TEXT", "TAG_CLOSE", 
                          "TAG_SLASH_CLOSE", "TAG_SLASH", "TAG_EQUALS", 
                          "TAG_NAME", "TAG_WHITESPACE", "ATTVALUE_VALUE", 
                          "ATTRIBUTE" ];
	static ruleNames = [ "SEA_WS", "TAG_OPEN", "SWAGGER_TEXT", "TAG_CLOSE", 
                      "TAG_SLASH_CLOSE", "TAG_SLASH", "TAG_EQUALS", "TAG_NAME", 
                      "TAG_WHITESPACE", "HEXDIGIT", "DIGIT", "TAG_NameChar", 
                      "TAG_NameStartChar", "ATTVALUE_VALUE", "ATTRIBUTE", 
                      "ATTCHARS", "ATTCHAR", "HEXCHARS", "DECCHARS", "DOUBLE_QUOTE_STRING", 
                      "SINGLE_QUOTE_STRING" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

SwaggerLexer.EOF = antlr4.Token.EOF;
SwaggerLexer.SEA_WS = 1;
SwaggerLexer.TAG_OPEN = 2;
SwaggerLexer.SWAGGER_TEXT = 3;
SwaggerLexer.TAG_CLOSE = 4;
SwaggerLexer.TAG_SLASH_CLOSE = 5;
SwaggerLexer.TAG_SLASH = 6;
SwaggerLexer.TAG_EQUALS = 7;
SwaggerLexer.TAG_NAME = 8;
SwaggerLexer.TAG_WHITESPACE = 9;
SwaggerLexer.ATTVALUE_VALUE = 10;
SwaggerLexer.ATTRIBUTE = 11;

SwaggerLexer.TAG = 1;
SwaggerLexer.ATTVALUE = 2;


module.exports = SwaggerLexer;

